<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h3>client</h3>
    <ul></ul>
    <form id="chat">
        <input type="text" id="user" placeholder="사용자 명" />
        <input type="text" id="message" placeholder="채팅내용" /><br />
        <button>채팅</button>
    </form>

    <script>
        const socket = new WebSocket('ws://localhost:8000');
        //ul 가져오기
        const ul = document.querySelector('ul');
        // chat form 가져오기
        const chatForm = document.querySelector('#chat');

        // 서버에 연결
        socket.addEventListener('open', (event) => {
            socket.send(JSON.stringify({ user: 'client', message: 'hello server' }));
            console.log('서버에 연결이 되었습니다.');
        });

        // 메세지를 주고 받음
        socket.addEventListener('message', (event) => {
            console.log(event);
            const li = document.createElement('li');
            li.textContent = event.data;
            ul.appendChild(li);
        });

        // 폼 이벤트
        chatForm.addEventListener('submit', (event) => {
            event.preventDefault(); // submit이 바로 서버에 보내지 못하게 막는 것
            const user = chatForm.querySelector('#user');
            const msg = chatForm.querySelector('#message');
            // json문자열로 서버에 데이터를 보냄
            socket.send(JSON.stringify({ user: user.value, message: msg.value }));
            msg.value = '';
        });

        // 오류 이벤트
        socket.addEventListener('error', (err)=>{
            console.log('에러발생', err);
        });

        //접속 종료
        socket.addEventListener('close', ()=>{
            console.log('클라이언트가 종료되었습니다.');
        });
    </script>
</body>

</html>